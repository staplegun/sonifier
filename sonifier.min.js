class Sonifier{constructor(a){this._synthConfig=Sonifier.defaultSynthConfig,this._synthRedNotes=Sonifier.defaultRedNotes,this._synthGreenNotes=Sonifier.defaultGreenNotes,this._synthBlueNotes=Sonifier.defaultBlueNotes,this._dynamicRange=Sonifier.defaultDynamicRange,this._imagePixelSampling=Sonifier.defaultImagePixelSamplingDistance,this._imageAnalysisStrategy=Sonifier.defaultImageAnalysisStrategy,this._volRed=new Tone.PanVol(0,-10),this._volGreen=new Tone.PanVol(-0.5,-10),this._volBlue=new Tone.PanVol(0.5,-10),this._masterVolume=new Tone.Volume(0);let b=new Tone.Compressor;a&&(a.synthConfig&&(this._synthConfig=a.synthConfig),a.synthRedNotes&&(this._synthRedNotes=a.synthRedNotes),a.synthGreenNotes&&(this._synthGreenNotes=a.synthGreenNotes),a.synthBlueNotes&&(this._synthBlueNotes=a.synthBlueNotes),a.dynamicRange&&1<=a.dynamicRange&&(this._dynamicRange=a.dynamicRange),a.imagePixelSampling&&1<=a.imagePixelSampling&&(this._imagePixelSampling=a.imagePixelSampling),a.imageAnalysisStrategy&&(this._imageAnalysisStrategy=a.imageAnalysisStrategy)),this._synthRed=new Tone.PolySynth(3,Tone.Synth,this._synthConfig),this._synthGreen=new Tone.PolySynth(3,Tone.Synth,this._synthConfig),this._synthBlue=new Tone.PolySynth(3,Tone.Synth,this._synthConfig),this._synthRed.chain(this._volRed,b,this._masterVolume,Tone.Master),this._synthGreen.chain(this._volGreen,b,this._masterVolume,Tone.Master),this._synthBlue.chain(this._volBlue,b,this._masterVolume,Tone.Master)}playRed(){this._synthRed.triggerAttack(this._synthRedNotes)}playGreen(){this._synthGreen.triggerAttack(this._synthGreenNotes)}playBlue(){this._synthBlue.triggerAttack(this._synthBlueNotes)}play(){console.log("Playing sonifier"),this.playRed(),this.playGreen(),this.playBlue()}releaseRed(){this._synthRed.triggerRelease(this._synthRedNotes)}releaseGreen(){this._synthGreen.triggerRelease(this._synthGreenNotes)}releaseBlue(){this._synthBlue.triggerRelease(this._synthBlueNotes)}release(){console.log("Silencing sonifier"),this.releaseRed(),this.releaseGreen(),this.releaseBlue()}volumeRed(a=100){this._volRed.volume.rampTo(Sonifier.toDecibelSine(a,this._dynamicRange),0.5)}volumeGreen(a=100){this._volGreen.volume.rampTo(Sonifier.toDecibelSine(a,this._dynamicRange),0.5)}volumeBlue(a=100){this._volBlue.volume.rampTo(Sonifier.toDecibelSine(a,this._dynamicRange),0.5)}volumeMaster(a=-10){this._masterVolume.volume.rampTo(a,0.5)}static toDecibelSine(a,b=Sonifier.defaultDynamicRange){return b/2*Math.sin(3.141*a/255-3.141/2)-b/2}analyseCanvas(a,b=this._imageAnalysisStrategy){void 0!==a&&null!=a&&("tiers"===b?this.analyseImageTiers(a.getContext("2d").getImageData(0,0,a.width,a.height)):this.analyseImageAbsolutes(a.getContext("2d").getImageData(0,0,a.width,a.height)))}analyseImageAbsolutes(a){if(!(1>=a.height||1>=a.width)){let b=Sonifier.calculateBrightnessAverages(a,this._imagePixelSampling);console.log("Sonifying brightness: R="+b.red.toFixed(0)+" G="+b.green.toFixed(0)+" B="+b.blue.toFixed(0)),console.log("Sonifying decibels: R="+Sonifier.toDecibelSine(b.red).toFixed(0)+" G="+Sonifier.toDecibelSine(b.green).toFixed(0)+" B="+Sonifier.toDecibelSine(b.blue).toFixed(0)),this.volumeRed(b.red),this.volumeGreen(b.green),this.volumeBlue(b.blue)}}analyseImageTiers(a){if(!(1>=a.height||1>=a.width)){let f,g,h,b=Sonifier.calculateBrightnessAverages(a,this._imagePixelSampling),c=Math.min(b.red,b.green,b.blue),d=Math.max(b.red,b.green,b.blue),e=d/255;switch(b.red){case c:f=Sonifier.tierVolumes[0]*e;break;case d:f=Sonifier.tierVolumes[2]*e;break;default:f=Sonifier.tierVolumes[1]*e;}switch(b.green){case c:g=Sonifier.tierVolumes[0]*e;break;case d:g=Sonifier.tierVolumes[2]*e;break;default:g=Sonifier.tierVolumes[1]*e;}switch(b.blue){case c:h=Sonifier.tierVolumes[0]*e;break;case d:h=Sonifier.tierVolumes[2]*e;break;default:h=Sonifier.tierVolumes[1]*e;}console.log("Sonifying brightness: R="+b.red.toFixed(0)+" G="+b.green.toFixed(0)+" B="+b.blue.toFixed(0)),console.log("Sonifying tiered: R="+f.toFixed(0)+" G="+g.toFixed(0)+" B="+h.toFixed(0)),console.log("Sonifying decibels: R="+Sonifier.toDecibelSine(f).toFixed(0)+" G="+Sonifier.toDecibelSine(g).toFixed(0)+" B="+Sonifier.toDecibelSine(h).toFixed(0)),this.volumeRed(f),this.volumeGreen(g),this.volumeBlue(h)}}static calculateBrightnessAverages(a,b=Sonifier.defaultImagePixelSamplingDistance){let c=a.width,d=a.height,e=0,f=0,g=0;for(let h=0;h<c;h+=b)for(let i=0;i<d;i+=b)e+=a.data[Sonifier.getColorIndicesForCoord(h,i,c)[0]],f+=a.data[Sonifier.getColorIndicesForCoord(h,i,c)[1]],g+=a.data[Sonifier.getColorIndicesForCoord(h,i,c)[2]];return e=e*(b*b)/(c*d),f=f*(b*b)/(c*d),g=g*(b*b)/(c*d),{red:e,green:f,blue:g}}pollCanvasStart(a,b=2){this._pollTimer=setInterval(function(){sonifier.analyseCanvas(a)},1e3*b)}pollCanvasStop(){clearInterval(this._pollTimer)}static getColorIndicesForCoord(a,b,c){let d=b*(4*c)+4*a;return[d,d+1,d+2,d+3]}}Sonifier.defaultSynthConfig={oscillator:{type:"fatsine",count:3,spread:30},envelope:{attack:0.01,decay:0.1,sustain:0.5,release:5,attackCurve:"exponential"}},Sonifier.defaultRedNotes=["C2","E2"],Sonifier.defaultGreenNotes=["G3","D4"],Sonifier.defaultBlueNotes=["A3","C4"],Sonifier.defaultDynamicRange=30,Sonifier.defaultImagePixelSamplingDistance=10,Sonifier.defaultImageAnalysisStrategy="absolute",Sonifier.tierVolumes=[80,180,255];
